package ru.jcourse.less002.components.obj;

import java.util.HashMap;
import java.util.Map;

import ru.jcourse.less002.exceptions.CanNotFindVariable;

public class Vars {
	
	private Map<String, Double> vars = new HashMap<>();
	
	public void putVar(String key, double value){
		vars.put(key, value);
	}
	
	public double getValue(String key){
		try {
			double result = Double.parseDouble(key);
			return result;
		} catch (Exception e) {
		}
		if (vars.get(key) == null)
			throw new CanNotFindVariable();
		return vars.get(key);
	}
	
//	package ru.jcourse.less002;
//
//	import static ru.jcourse.less002.InstructionFactory.hashMap;
//	import ru.jcourse.less002.exceptions.CanNotParseString;
//
//	public class VarDigit {
//		
//		String name;
//		double value;
//		
//		public VarDigit(String name) throws CanNotParseString {
//			if (hashMap.get(name) != null)
//				this.name = name; 
//			else 
//				try {
//					value = Double.valueOf(name);
//				} catch (Exception e) {
//					throw new CanNotParseString();
//				}
//		}
//		
//		public VarDigit(String name, double value) {
//			super();
//			this.name = name;
//			this.value = value;
//		}
//		
//		public double getValue(){
//			if (name != null)
//				return hashMap.get(name);
//			else 
//				return value;
//		}
//		
//		@Override
//		public String toString() {
//			Double d = getValue();
//			return  "" + d;
//		}
//	}

	
}
